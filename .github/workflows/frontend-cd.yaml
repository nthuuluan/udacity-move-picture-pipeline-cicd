name: Frontend CD

on:
  push:
    branches:
      - main
    paths:
      - 'starter/frontend/**'

jobs:
  lint_and_test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      
      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '16'

      - name: Install dependencies
        run: cd starter/frontend && npm install

      - name: Linting
        run: cd starter/frontend && npm run lint

      - name: Run the test command
        run: cd starter/frontend && npm run test

  build_and_deploy:
    needs: lint_and_test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Build Docker image
        run: |
          cd starter/frontend && docker build --build-arg=REACT_APP_MOVIE_API_URL=${{ secrets.REACT_APP_MOVIE_API_URL }} -t frontend:${GITHUB_SHA::7} .

      # Configure AWS credentials
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-session-token: ${{secrets.AWS_SESSION_TOKEN}}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Login to ECR
        uses: aws-actions/amazon-ecr-login@v1
        with:
          registry: ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com
          access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      - name: Push Docker image to ECR
        run: |
          docker tag frontend:${GITHUB_SHA::7} ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/frontend:${GITHUB_SHA::7}
          docker push ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/frontend:${GITHUB_SHA::7}

      - name: Update-kubeconfig
        run: |
          aws eks --region ${{ secrets.AWS_REGION }}  update-kubeconfig --name cluster 
      
      - name: Set image for Kubernetes deployment
        run: |
          cd starter/frontend/k8s
          kustomize edit set image frontend=${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/frontend:${GITHUB_SHA::7}

      - name: Apply Kubernetes manifests to EKS cluster
        run: |
          cd starter/frontend/k8s && kustomize build | kubectl apply -f -

